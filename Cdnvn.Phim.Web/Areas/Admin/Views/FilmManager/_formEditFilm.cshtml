@model Cdnvn.Phim.Entities.Film

<div class="editor-label">
    @Html.LabelFor(model => model.Name)
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.Name)
    <input type="checkbox" id="checkInput" checked="checked"/>
    @Html.ValidationMessageFor(model => model.Name)
</div>

<div class="editor-label">
     @Html.LabelFor(model => model.SEOName) 
</div>
<div class="editor-field">
    @HttpContext.Current.Request.Url.DnsSafeHost/
    @Html.EditorFor(model => model.SEOName)
    .html
    @Html.ValidationMessageFor(model => model.SEOName)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.MetaKeyword)
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.MetaKeyword)
    @Html.ValidationMessageFor(model => model.MetaKeyword)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.MetaDescription)
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.MetaDescription)
    @Html.ValidationMessageFor(model => model.MetaDescription)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.Description)
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.Description)
    @Html.ValidationMessageFor(model => model.Description)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.IsTrainler)
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.IsTrainler)
    @Html.ValidationMessageFor(model => model.IsTrainler)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.ImageUrl)
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.ImageUrl)
    @Html.ValidationMessageFor(model => model.ImageUrl)
</div>

@Html.Action("_Category", "CategoryManager", new { Checkeds = Model.Categories })


<div class="editor-label">
    @Html.LabelFor(model => model.Published)
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.Published)
    @Html.ValidationMessageFor(model => model.Published)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.Order)
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.Order)
    @Html.ValidationMessageFor(model => model.Order)
</div>

<div class="editor-part">
    
    @{
        var count = 0;
    }
    @if (Model.FilmParts==null||!Model.FilmParts.Any())
    {
        count++;
       <div class="part" part="1">
            <div class="editor-label">
                <label>Tập 1 (Youtube):</label>
            </div>
           <div class="editor-field">
               <input type="hidden" name="pId" value="0"/>
               <input type="text" part="1" name="Part" />
           </div>
        </div>
    }
    else
    {
        foreach (var filmPart in Model.FilmParts)
        {
            count++;
            <div class="part" part="@count">
                <div class="editor-label">
                    <label>Tập @count (Youtube):
                    </label>
                </div>
                <div class="editor-field">
                    <input type="hidden" name="pId" value="@filmPart.Id"/>
                    <input type="text" part="@count" name="Part" value="@filmPart.YoutubeId" />
                </div>
            </div>
        }

    }
    <a class="t-button add-part" onclick="AddPart()">Thêm+</a>
    <script type="text/javascript">
        part = '@count';
        function AddPart() {
            part++;
            var str = '<div class="part" part="' + part + '">' +
                '<div class="editor-label">' +
                '<label>Tập ' + part + ' (Youtube):</label>' +
                '</div>' +
                '<div class="editor-field">' +
                '<input type="hidden" name="pId" value="0"/>'+
                '<input type="text" part="' + part + '" name="Part" />' +
                '</div>';
            $('.add-part').before(str);
        }
    </script>
</div>



